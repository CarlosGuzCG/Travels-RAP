managed; //implementation in class zbp_i_travel_guz unique;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for z_i_travel_guz alias Travel //Tabla CDS
implementation in class zbp_i_travel_guz unique
persistent table ztravel_guz //tabla de persistencia
lock master // Bloqueo
authorization master ( instance )
etag master last_changed_at
{
  //Administrative fields: read only
  field ( readonly ) last_changed_at, last_changed_by, created_at, created_by; //Read-Only
  // Mandatory fields that are required to create a travel
  field ( mandatory ) agency_id, overall_status, booking_fee, currency_code;
  // Dynamic field control
  field ( features : instance ) travel_id; //Creation ID
  //  field ( numbering : managed ) travel_id;
  create;
  update;
  delete;

  //validations
  validation validateCustomer on save { field customer_id; } //Validación de información
  validation validateDates on save { field begin_date, end_date; }
  validation validateStatus on save { field overall_status; }

  //actions
  action ( features : instance ) acceptTravel result [1] $self; //$self = Esta misma instancia
  action ( features : instance ) rejectTravel result [1] $self;

  action createTravelByTemplate result [1] $self;

  association _Booking { create; }

  mapping for ztravel_guz
    {
        travel_id = travel_id;
        agency_id = agency_id;
        customer_id = customer_id;
        begin_date = begin_date;
        end_date = end_date;
        booking_fee = booking_fee;
        total_price = total_price;
        currency_code = currency_code;
        description = description;
        overall_status = overall_status;
        created_by = created_by;
        created_at = created_at;
        last_changed_by = last_changed_by;
        last_changed_at = last_changed_at;
    }
}

define behavior for z_i_booking_guz alias Booking //alias <alias_name>
implementation in class zbp_i_booking_guz unique
persistent table zbooking_guz
lock dependent by _Travel
authorization dependent by _Travel
//  authorization dependent
etag master last_change_at
{
  field ( readonly ) travel_id;
  field ( mandatory ) carrier_id, connection_id, flight_date, booking_status;
  update;
  delete;

  //validations
  validation validateCustomer on save { field booking_status; }

  //determinations
  determination calculateTotalFlighPrice on modify { field flight_price, currency_code; }

  //  field ( readonly ) travel_id;
  association _Travel;
  association _BookingSupplement { create; }

  mapping for zbooking_guz
    {
      travel_id      = travel_id;
      booking_id     = booking_id;
      booking_date   = booking_date;
      customer_id    = customer_id;
      carrier_id     = carrier_id;
      connection_id  = connection_id;
      flight_date    = flight_date;
      flight_price   = flight_price;
      currency_code  = currency_code;
      booking_status = booking_status;
      last_change_at = last_change_at;
    }

}

define behavior for z_i_booksuppl_guz alias Supplement //alias <alias_name>
implementation in class zbp_i_booksuppl_guz unique
with unmanaged save
//persistent table <???>
lock dependent by _Travel
authorization dependent by _Travel
etag master last_changed_at
{
  field ( readonly ) travel_id, booking_id;
  field ( mandatory ) supplement_id, price;
  update;
  delete;
  association _Travel;
  association _Booking;

  //determinations
  determination calculateTotalSupplPrice on modify { field price, currency; }

  mapping
       for zcg_guz corresponding;
    }